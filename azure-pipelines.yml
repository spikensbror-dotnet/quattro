pool:
  vmImage: ubuntu-latest
name: 0.0.1+$(Rev:r)
variables:
  projectName: 'Quattro'

trigger:
  branches:
    exclude:
    - master

steps:

- checkout: self

- task: NuGetToolInstaller@1
  displayName: 'Ensure latest version of NuGet'
  inputs:
    versionSpec: 
    checkLatest: true

- script: dotnet build -c Release
  displayName: 'Build'

- task: DotNetCoreCLI@2
  displayName: 'Tests'
  inputs:
    command: 'test'
    projects: '$(System.DefaultWorkingDirectory)/$(projectName).Tests/$(projectName).Tests.csproj'
    arguments: '--collect "XPlat Code Coverage"'

- task: PublishCodeCoverageResults@1
  inputs:
    codeCoverageTool: 'Cobertura'
    summaryFileLocation: '$(Agent.TempDirectory)/*/coverage.cobertura.xml'
    failIfCoverageEmpty: true

- task: DotNetCoreCLI@2
  displayName: 'dotnet pack for $(projectName)'
  inputs:
    command: 'pack'
    packagesToPack: '$(projectName)/*.csproj'
    configuration: 'Release'
    packDirectory: '$(Build.ArtifactStagingDirectory)/packages'
    versioningScheme: 'byEnvVar'
    versionEnvVar: 'BUILD_BUILDNUMBER'

- task: DotNetCoreCLI@2
  displayName: 'dotnet pack for $(projectName).Extensions.DependencyInjection'
  inputs:
    command: 'pack'
    packagesToPack: '$(projectName).Extensions.DependencyInjection/*.csproj'
    configuration: 'Release'
    packDirectory: '$(Build.ArtifactStagingDirectory)/packages'
    versioningScheme: 'byEnvVar'
    versionEnvVar: 'BUILD_BUILDNUMBER'

- task: PublishBuildArtifacts@1
  displayName: 'Publish packages artifact'
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)/packages'
    ArtifactName: 'packages'
    publishLocation: 'Container'